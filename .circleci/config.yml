# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    
    working_directory: ~/repo/verademo
    
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test

      # keep the files around for the scan job
      - persist_to_workspace:
          root: ..
          paths:
            - verademo
    # job to upload to Veracode for scanning
  veracode_scan:

    # use the official Veracode Docker image
    docker:
      - image: veracode/api-wrapper-java:latest
      
    working_directory: ~/repo
    
    steps:
      # get the files from the previous job
      - attach_workspace:
          at: .

      # 'package' for uploading to Veracode
      - run: 
          name: "Package for upload to Veracode"
          #command: zip -r upload.zip nodegoat
          #command: zip -r upload.zip nodegoat -x *node_modules/*
          command: ls verademo/target

      # upload for scanning
      # env vars are used to pass login creds and set the scan name
      - run:
          name: "Upload to Veracode"
          command: java -jar /opt/veracode/api-wrapper.jar 
              -vid $VERACODE_API_ID 
              -vkey $VERACODE_API_KEY 
              -action uploadandscan 
              -appname Verademo 
              -createprofile false 
              -version CircleCI-$CIRCLE_BUILD_NUM 
              -filepath verademo/target/verademo.war
              
    # job to upload to Veracode for scanning
  srcclr_scan:
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:17.0.3

    working_directory: ~/repo

    steps:
      # get the files from the previous job
      - attach_workspace:
          at: .

      # download and run SourceClear scanner
      - run:
          name: "SourceClear scan"
          command: |
            cd verademo
            curl -sSL https://download.sourceclear.com/ci.sh | bash
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_and_scan:
    jobs:
      - build
      - veracode_scan:
          requires:
            - build
      - srcclr_scan:
          requires:
            - build
